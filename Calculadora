package calculadora;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;


public class Calculadora extends JFrame {
    private JTextField entrada;

    public Calculadora() {
      
        setTitle("Calculadora");
        setSize(300, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

      
        entrada = new JTextField();
        entrada.setFont(new Font("Arial", Font.PLAIN, 20));
        entrada.setHorizontalAlignment(JTextField.RIGHT);
        entrada.setEditable(false);
        entrada.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
        add(entrada, BorderLayout.NORTH);

        // Painel para os botões
        JPanel painelBotoes = new JPanel();
        painelBotoes.setLayout(new GridLayout(5, 4, 5, 5));

        // Lista de botões
        String[] botoes = {
                "7", "8", "9", "/",
                "4", "5", "6", "*",
                "1", "2", "3", "-",
                "0", ".", "C", "+",
                "="
        };

        
        for (String texto : botoes) {
            JButton botao = new JButton(texto);
            botao.setFont(new Font("Arial", Font.PLAIN, 20));
            botao.setFocusPainted(false);

            if (texto.equals("=")) {
                botao.setBackground(Color.LIGHT_GRAY);
                botao.addActionListener(e -> calcular());
            } else if (texto.equals("C")) {
                botao.setBackground(Color.PINK);
                botao.addActionListener(e -> limpar());
            } else {
                botao.addActionListener(e -> adicionarCaractere(texto));
            }

            painelBotoes.add(botao);
        }

        add(painelBotoes, BorderLayout.CENTER);

       
        setVisible(true);
    }

  
    private void adicionarCaractere(String caractere) {
        entrada.setText(entrada.getText() + caractere);
    }

 
    private void calcular() {
        try {
            String expressao = entrada.getText();
            double resultado = avaliarExpressao(expressao);
            entrada.setText(String.valueOf(resultado));
        } catch (Exception e) {
            entrada.setText("Erro");
        }
    }

 
    private double avaliarExpressao(String expressao) {
        // Usa o script engine para avaliar a expressão
        try {
            javax.script.ScriptEngine engine = new javax.script.ScriptEngineManager().getEngineByName("JavaScript");
            return Double.parseDouble(engine.eval(expressao).toString());
        } catch (Exception e) {
            throw new RuntimeException("Expressão inválida");
        }
    }

  
    private void limpar() {
        entrada.setText("");
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(Calculadora::new);
    }
}
